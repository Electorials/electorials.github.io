:root {
    --nav-height: 5rem;
}

*, *::before, *::after {
    box-sizing: border-box;
}

/***** Globals *****/
* {
    line-height: 1.75rem;
    font-family: sans-serif;
}

div {
    margin: 2rem auto;
}

body {
    overflow-x: hidden;
}

/***** Nav rules *****/
nav {
    position: fixed;
    min-width: 100%;
    height: calc(var(--nav-height) + .125rem);
    /* .125rem is border width.
    Replaces outline declaration issue that would
    flow outside of nav. Also keeps nav content height at 4rem when border is
    added.*/
    background-color: white;

    font-family: 'Monteserrat', sans-serif;
    text-align: center;

    z-index: 1;
    /* Without this, the hr lines strangely would be visible in the navbar
    because of their opacity declaration. */

    border-bottom: #ff6100 .125rem solid;
    /* Adds bottom outline to the navbar. */
}

.logo {
    float: left;
    margin: .5rem;
    height: 100%;
}

.logo,
.logo img {
    max-height: 4rem;
    display: inline;
}

.logo img {
    padding: .125rem;
}

/*** Nav menu ***/
.menu {
    list-style-type: none;
    margin: 0 1em;
    height: 100%;

    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    justify-content: space-around;
    align-items: center;
}

.menu-item a {
    --item-width: 100%;
    display: flex;
    padding: .125rem .875rem;
    font-size: .875em;
    width: var(--item-width);
    transform: translateX(calc((100% - var(--item-width)) / 2 ));
    line-height: 1.5rem;
    text-decoration: none;
}
/* Navbar overflows at 1175px. Later create media query to change styling at
1180px or somewhere wider. */

.menu-item a:hover {
	background-color: rgba(255, 97, 0, .75);
}

/* Should add a border around nav item when navigating with Tab key */
.menu-item a:focus {
    outline: #ff6100 .125rem solid;
}

/** Dropdown menu rules start **/
.dropdown li:hover {
    background: #a2a2a2;
}

nav .menu .menu-item .dropdown {
    visibility: hidden;
    opacity: 0;
    position: absolute;
    margin-top: 1rem;
    left: 0;
    display: none;
    background: #e2e2e2;
}

nav .menu .menu-item:hover > .dropdown,
nav .menu .menu-item .dropdown:hover {
    visibility: visible;
    opacity: 1;
    display: block;
}

nav .menu .menu-item .dropdown li {
    clear: both;
    width: 100%;
}

nav ul.dropdown li.menu-item {
    font-family: 'Monteserrat', sans-serif;
    text-align: center;
}
/** Dropdown menu rules end **/

/***** Main content rules *****/


main {
    padding: calc(var(--nav-height) - 2em) 0 0;
    border-bottom: solid #ff6100 .125rem;
}

.content {
    margin: 2rem auto 0;
}


/*** Banner/hero rules ***/
.banner {
    display: flex;
    justify-content: center;
    align-items: center;
    /* These three above centre all content at the exact middle of the X and Y axes */

    flex-direction: column;
    /* Any siblings under .banner will vertically stack rather than sit next to one another */

    padding: 5.5em;
    margin: auto;

    /* background-image: url(https://electorials.com/uploads/1/0/1/7/101767294/background-images/944554335.png); */
    /* This won't be implemented, as it's a sort of proof of concept.
    The general markup will be this for all pages with the hero/banner section:
    <div class="banner" style="background-image: url({{ page.banner-image }});"><h1>Page Title</h1></div>
    {{ page.background-image }} will be defined in each page's front matter variables.
    The background-image property in the style attribute might be something like this:
    background-image: url(/assets/img/arduino/banners/{{ page.banner-image }})
    Might have to use Modernizr.js for using WebP images as the background, while also using JPEG and PNG images on older browsers (https://css-tricks.com/using-webp-images/) */
}

.hero {
    width: 100vw;
    margin: 0;
    min-height: 35em;

    background: -webkit-linear-gradient(bottom, rgba(0,0,0,0.25), rgba(0,0,0,0.25)),
    var(--hero-image);
    background: -o-linear-gradient(bottom, rgba(0,0,0,0.25), rgba(0,0,0,0.25)),
    var(--hero-image);
    background: linear-gradient(to top, rgba(0,0,0,0.25), rgba(0,0,0,0.25)),
    var(--hero-image);
    background-position: 50%;
    background-size: cover;
    background-repeat: no-repeat;
        /* `background-size: cover` fits the image into the element's space by
        the image's shortest dimension. `background-position` is shorthand for
        `background-position-x` and `background-position-y`, with `-y`
        defaulting to `center` if `background-position` is only used.

        If the image is tall, `background-position-y` can be adjusted by
        percentage; adjusting `background-position-x` does nothing. Vice versa
        for wide images: `-x` is adjustable while adjusting `-y` does nothing.
        Abandon `background-position` and use its `-x` and `-y` pairs if the
        image is tall.

        Note that the above works ONLY IF `background-size: cover` is present.
        If not, then both `background-position`s are adjustable, but the image
        will NOT scale up nor down to fill the space.

        Percentages make understanding the adjusting easier than with other
        units, but is still possible with rems and inches for example. The
        percent unit is based on the element's space, which is why it should
        make adjusting easier to understand.*/
}

.hero-text {
    display: inline-block;
    /* font-size: 1.5em; */
    width: 100%;
    padding: 0 0 3.75rem;
    text-align: center;
}

.hero-text * {
    line-height: 2rem;
    margin: 2rem 1.5rem;
}

.hero h1, .hero h2 {
    text-transform: uppercase;
    font-family: 'Patua One', serif;
    color: rgb(43, 89, 12);
}

.hero p {
    font-family: 'Open Sans', sans-serif;
    margin-top: 1.5em;
    color: rgb(147, 219, 223);
}

/*** Section rules ***/
section {
    padding: 2rem;
}

.section-border {
    height: .25rem;
    background-color: #ff6100;
    margin: 0 auto;
    width: 75vw;
    max-width: 45rem;
}
/***********
About .section-border:
Using the ::before and ::after pseudo-classes for the section tag doesn't seem
to make adding a border easy without manipulating margin and padding values.

Margin values as so to have it aligned to where the content begins and ends.
Viewport width to change the border width according to viewport width, but
stops growing at 45rem; it stays below the `section > *` max-width value, while
not being too long or short regardless of viewport width.
If there is no max-width, the border would reach into the margins when on a
wide viewport.
***********/


/* Targets all immediate children of the section tags.
- Content will expand as it grows from small to a max of 60rem. Wider viewport
would create the whitespace similar to the original site.
- Adds equal top and bottom margins within each coloured section for some nice
uniformity, while also horizontally centring the children and keeping the
background colour stretched to the viewport edges.
 */
section > * {
    max-width: 60rem;
    margin: 1.125rem auto;
}

section h2 {
    text-align: center;
    /* margin-bottom: 1.5rem; */
    font-size: 1.8rem;
}

section h4 {
    font-size: 1.5rem;
    text-decoration: underline;
    text-transform: uppercase;
}

section hr {
    margin: 2rem auto;
    border-color: black;
    opacity: 0.375;
    /* ^^^ Changes the opacity of the hr lines. Set at 0.375 to maintain
    visibility, while also sticking close to the background colours'
    saturation levels. */
}

section p,
section ul li,
section ol li {
    font-size: 1rem;
}

section li {
    margin: 0 1rem;
}

.quote blockquote {
    font-size: 1.375rem;
}

.quote p {
    text-align: right;
    font-size: 1.3rem;
    color: #8d2424;
    font-weight: 700;
}

/* Targets <ul> blocks with links in their <li> tags, to give them flex rules */
.links {
    list-style-type: none;

    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-wrap: wrap;
    min-height: 100%;
    width: 100%;
    text-align: center; /*Centres all text in the <a> tags*/
}

.links li {
    margin: 1rem;
    text-align: center;
}

.links a {
    padding: 0.75rem 1.25rem;
    margin: 0 5rem;

    border: .25rem solid #5a5f63;
    background: white;
    color: #5a5f63;
    text-decoration: none;
    font-weight: 600;

    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    justify-content: space-around;
    align-items: center;
}

/***** Footer content rules *****/
footer {
    padding: 0 1.5rem;
    margin: 2.75rem auto;
    max-width: 60rem;
    /* ^^^ These three rules bring the footer close to how the main content is
    laid out. */
    text-align: center;
    background-color: white;
    font-family: 'Lato', sans-serif;
}

footer > div {
    margin: 2rem auto;
}

footer hr {
    border-color: black;
    opacity: 0.375;
}

#footer-links ul {
    list-style-type: none;

    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-wrap: wrap;
    flex-direction: column;
}

#footer-links,
#footer-links ul {
    margin-top: 0;
}

/* This li is .footer-item */
footer ul li {
    margin: .325rem 0;
    font-size: 1em;
}

.footer-item a {
    display: block;
    padding: 0.75em;
    font-weight: 700;
    text-decoration: none;
}

.footer-item a:hover {
    background-color: rgba(255, 97, 0, .75);
    color: #575252
}

.footer-item a:focus {
    border: #ff6100 .125rem solid;
}

#footer-banner {
    font-family: 'Patua One', sans-serif;
    font-size: 1rem;
    letter-spacing: 2px;
    text-transform: uppercase;
}

#copyright {
    float: right;
    font-size: 1em;
    font-family: 'Lato', sans-serif;
}

/* For screens whose resolution width is 800px or greater */
@media only screen and (min-width: 800px) {
    :root {
        --nav-height: 7rem;
    }

    nav {
        height: calc(var(--nav-height) + .125rem);
    }

    .logo {
        margin: 1.5rem;
    }

    .menu-item a {
        padding: 1.125rem .875rem;
        line-height: 1.6rem;
    }

    .hero-text * {
        margin: 2rem 2.5rem;
    }

    .hero h2 {
        margin: 0 4rem;
    }

    #footer-links ul {
        flex-wrap: nowrap;
        flex-direction: row;
    }

    footer ul li {
        margin: .125rem;
    }
}

/* TODO:
- Create hover effect/animations for button-like links
- Better text colour contrast for dark section backgrounds
- Create :hover rules for links with `a:hover`. This is for if somebody is navigating through links with their keyboard and needs a clear indication of what link they're on.
    - Also figure out how to change the behaviour of focusing on a link so that it does not show on the edges of the viewport, especially when navigating backwards; focused links would be hidden behind the sticky navbar."
    - Might create seperate rule for button-like links*/

/*
* { background-color: rgba(255,0,0,.2); }
* * { background-color: rgba(0,255,0,.2); }
* * * { background-color: rgba(0,0,255,.2); }
* * * * { background-color: rgba(255,0,255,.2); }
* * * * * { background-color: rgba(0,255,255,.2); }
* * * * * * { background-color: rgba(255,255,0,.2); }
* * * * * * * { background-color: rgba(255,0,0,.2); }
* * * * * * * * { background-color: rgba(0,255,0,.2); }
* * * * * * * * * { background-color: rgba(0,0,255,.2); }
*/
